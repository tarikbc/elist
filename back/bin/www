#!/usr/bin/env node

if (process.env.NODE_ENV !== 'production') {
  require('dotenv').config()
}
const app = require('../app')
const http = require('http')
const chalk = require('chalk')
const server = http.createServer(app)

const port = normalizePort(process.env.PORT || 8080)
app.set('port', port)

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

function normalizePort(val) {
  let port = parseInt(val, 10)

  if (isNaN(port)) {
    return val
  }

  if (port >= 0) {
    return port
  }

  return false
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  // handle de erros
  switch (error.code) {
    case 'EACCES':
      console.log('Porta ' + chalk.magenta(port) + ' necessita de privilégio de administrador.', error)
      process.exit(0)
    case 'EADDRINUSE':
      console.log('Porta ' + chalk.magenta(port) + ' já está sendo utilizada.', error)
      process.exit(0)
    default:
      console.log('Erro: "' + error + '" ao inicializar express.', error)
      process.exit(0)
  }
}

process.on('uncaughtException', function (err) {
  console.log('Erro de escape: ', err)
});

function onListening() {
  let addr = server.address()
  console.log(`Express inicializado na porta ${chalk.magenta(addr.port)}.`)
}

module.exports = app 